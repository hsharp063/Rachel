@*
    Shows post for landing. This is almost identical to /Post/uBlogsyPostShowPost.cshtml but gives you the option to customise it individually.
*@

@using uBlogsy.BusinessLogic
@inherits UmbracoTemplatePage
@{
    // image settings
    const string defaultImage = null;
    const int imageHieght = -1; // -1 if no height specified
    const int imageWidth = -1;
    
    var node = (IPublishedContent)ViewData["Node"];

    var url = Request.QueryString.Count == 0 ? node.Url() : string.Format("{0}?{1}", node.Url(), Request.QueryString);
    
    @ShowPost(node, url, imageHieght, imageWidth, defaultImage)
}



@helper ShowPost(IPublishedContent node, string url, int imageHieght, int imageWidth, string defaultImage)
    {
	
		<article class="post mb-medium">
			@RenderPostImage(node, imageHieght, imageWidth, defaultImage)
			
			<h2><span>@(node.GetPropertyValue<DateTime>("uBlogsyPostDate").ToString("dddd MMMM d, yyyy"))</span>@node.GetPropertyValue("uBlogsyContentTitle")</h2>
			<ul class="entry-meta">
				<li class="entry-category">
					@Html.Partial("uBlogsy/Post/uBlogsyPostListLabels", ViewData)
				</li>
				<li class="entry-author">
					@Html.Partial("uBlogsy/Post/uBlogsyPostListAuthors", ViewData)
				</li>
			</ul>
			<p>
				@RenderPostBody(node)<br/>
				<a href="@node.Url">Read more</a>
			</p>
		</article>

}


@helper RenderPostBody(IPublishedContent d)
{
    var useSummary = DataService.Instance.GetValueFromLanding(d, "uBlogsyGeneralUseSummary");
    
    if (useSummary == "True")
    {
        @Html.Raw(d.GetPropertyValue("uBlogsyContentSummary"))
    }
    else
    {
    @Html.Raw(library.RenderMacroContent(d.GetPropertyValue<string>("uBlogsyContentBody"), d.Id))
    } 
}





@helper RenderPostImage(IPublishedContent node, int imageHieght, int imageWidth, string defaultImage)
{
    var imageId = node.GetPropertyValue<string>("uBlogsyPostImage");

    if (string.IsNullOrWhiteSpace(imageId) && string.IsNullOrWhiteSpace(defaultImage))
    {
        // no property or default so do nothing
        return;
    }

    var imageData = new Dictionary<string, object>()
             {
                 {"Alias", "uBlogsyPostImage"},
                 {"Suffix", ""},
                 {"Height", imageHieght},
                 {"Width", imageWidth},
                 {"CssClass", "responsive"},
                 {"Title", "Main Image"},
                 {"Map", string.Empty },
                 {"DefaultImage", defaultImage},
                 {"Node", node}
             };
			 
	<div class="post-pic">
		<a href="@node.Url">
			@Html.Partial("~/Views/Partials/uBlogsy/Shared/uBlogsyShowImage.cshtml", imageData)
		</a>
	</div>
 }
